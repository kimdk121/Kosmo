<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.staff.erp.service.StaffMapper">
	
	<sql id="staffWhere">
		<!-- 키워드 검색값이 있으면 -->
		<if test="staff_name != null and staff_name.length() > 0">
			and (
				upper(staff_name) like upper('%#{staff_name}%')
				)
		</if>
		
		<if test="gender != null and gender.size() > 0">
			and 
			<foreach collection="gender" item="gender" open="(" separator=" or " close=")" index="idx">	
				<if test='gender.equals("1")'>
					substr(jumin_num,8,1) in('1','3')       
				</if>
				
				<if test='gender.equals("2")'>
					substr(jumin_num,8,1) in('2','4') 
				</if>
			</foreach>
		</if>
		
		<if test="religion_code != null and religion_code > 0">
			and religion_code = ${religion_code} 
		</if>
		
		<if test="school_code != null and school_code.size() > 0">
			and school_code = ${school_code} 
		</if>
		
		<if test="skill_codeList != null and skill_code.size() > 0">
			and
			<foreach collection="skill_codeList" item="skill_codeList" open="(" separator=" or " close=")" index="idx">	
				 C.skill_code like '%${skill_codeList}%'
			</foreach>			
		</if>
		
		<if test="graduate_year_1 != null and graduate_year_1.length() > 0 and graduate_year_2 != null and graduate_year_2.length() > 0">
			and(
				to_date(graduate_day, 'yyyymmdd') between to_date(#{graduate_day_start}, 'yyyymmdd') 
					and add_months(to_date(#{graduate_day_end}, 'yyyymmdd'),1)-1
			)	
		</if>
		
 		<if test="graduate_year_1 != null and graduate_year_1.length() > 0 and graduate_year_2 == null">
			and(
				to_date(graduate_day, 'yyyymmdd') >= to_date(#{graduate_day_start}, 'yyyymmdd') 
			)	
		</if>
		
  		<if test="graduate_year_1 == null and graduate_year_2 != null and graduate_year_2.length() > 0">
			and(
				to_date(graduate_day, 'yyyymmdd') 
				<![CDATA[ 	<=  ]]>
				add_months(to_date(#{graduate_day_end}, 'yyyymmdd'),1)-1
			)	
		</if>
	</sql>
	
	
	<select id="retrieveList" resultType="HashMap">
		/*
		StafftMapper.retrieveList
		목록 조회
		*/
		select 
			cast(A.staff_no as char(4)) "staff_no"
			,A.staff_name "staff_name"
			,CASE SUBSTR(A.JUMIN_NO,8,1) WHEN '1' THEN '남' WHEN  '2' THEN '여' END "gender"
			,B.religion_name "religion_name"
			,A.graduate_day "graduate_day"
		from 
			staff A left join code_religion B on A.religion_code = B.religion_code 
		where
			1=1
			<include refid="staffWhere"/>
	</select>
	
	<select id="selectStaffNo" resultType="int">
		select 
			staff_no 
		from 
			staff 
		where 
			jumin_no = concat(#{jumin_no1},'-',#{jumin_no2})
	
	</select>
	
	<select id="retrieve" resultType="HashMap">
		select
			staff_no
			,staff_name
			,jumin_no
			,religion_code
			,school_code 
			,graduate_day
		from
			staff
		where
			staff_no = ${staff_no}
	</select>
	
	<select id="retrieveSkill" resultType="int">
		select
			skill_code
		from
			staff_skill
		where
			staff_no = ${staff_no}
	</select>
	
	<insert id="insertStaff">
		insert into staff 
		(
			staff_no
			,staff_name
			,jumin_no
			,school_code 
			,religion_code
			,graduate_day
		) values (
			(select ifnull(max(a.staff_no), 0)+1 from staff a)
			,#{staff_name}
			,concat(#{jumin_no1},'-',#{jumin_no2})
			,#{school_code}
			,#{religion_code}
			,concat(#{graduate_year},'-',#{graduate_month},'-',#{graduate_day})
		)
	</insert>
	
	<update id="updateStaff">
		update
			staff
		set
			staff_name = #{staff_name}
			,jumin_no = concat(#{jumin_no1},'-',#{jumin_no2})
			,school_code = #{school_code}
			,religion_code = #{religion_code}
			,graduate_day = concat(#{graduate_year},'-',#{graduate_month},'-',#{graduate_day})
		where
			staff_no = ${staff_no}
	</update>
	
	<insert id="insertSkill">
		insert into staff_skill
		(
			staff_no
			,skill_code
		) values (
			cast(#{staff_no} as unsigned)
			,#{skill_code}
		)
	</insert>
	
	<delete id="deleteStaffSkillAll">
		delete
		from
			staff_skill 
		where staff_no = ${staff_no}
	</delete>
	
	
</mapper>